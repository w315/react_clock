{"version":3,"sources":["components/Timer/Timer.tsx","App.tsx","index.tsx"],"names":["Timer","state","today","Date","toUTCString","slice","timerId","undefined","this","window","setInterval","setState","prevProps","prevState","name","props","console","debug","info","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockName","hide","timer","handleContextMenu","event","preventDefault","handleClick","addEventListener","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFhD,EAKUC,aAA8BC,EALxC,uDAOE,WAA2B,IAAD,OACxBC,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZT,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAE7C,OAZP,gCAeE,SAAmBO,EAAkBC,GAC/BD,EAAUE,OAASN,KAAKO,MAAMD,MAEhCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDN,KAAKO,MAAMD,OAG5DD,EAAUX,QAAUM,KAAKP,MAAMC,OAEjCc,QAAQE,KAAKV,KAAKP,MAAMC,SAvB9B,kCA2BE,gBACuBK,IAAjBC,KAAKF,SACPa,cAAcX,KAAKF,WA7BzB,oBAiCE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCZ,KAAKO,MAAMD,OAC3C,YACD,sBAAMM,UAAU,cAAhB,SACGZ,KAAKP,MAAMC,eAvCtB,GAA2BmB,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAQX,IAAMG,EAAb,4MACE1B,MAAQ,CACN2B,UAAW,UACXC,MAAM,GAHV,EAMUvB,aAA8BC,EANxC,EAQEuB,MAAQ,EARV,EA4BEC,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKtB,SAAS,CACZkB,MAAM,KAhCZ,EAoCEK,YAAc,SAACF,GACbA,EAAMC,iBAEN,EAAKtB,SAAS,CACZkB,MAAM,KAxCZ,uDAUE,WAAqB,IAAD,OAClBrB,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWL,QAC1B,MAEHd,OAAO0B,iBAAiB,cAAe3B,KAAKuB,mBAC5CtB,OAAO0B,iBAAiB,QAAS3B,KAAK0B,eAhB1C,kCAmBE,WACEzB,OAAO2B,oBAAoB,cAAe5B,KAAKuB,mBAC/CtB,OAAO2B,oBAAoB,QAAS5B,KAAK0B,kBAEpB3B,IAAjBC,KAAKF,SACPG,OAAOU,cAAcX,KAAKF,WAxBhC,oBA4CE,WACE,OACE,sBAAKc,UAAU,MAAf,UACE,6CAECZ,KAAKP,MAAM4B,MAAQ,cAAC,EAAD,CAAOf,KAAMN,KAAKP,MAAM2B,mBAjDpD,GAAyBP,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a2ff925b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: string;\n};\n\nexport class Timer extends React.Component<Props, State> {\n  state: State = {\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  private timerId: number | undefined = undefined;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        today: new Date().toUTCString().slice(-12, -4),\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.today !== this.state.today) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.today);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.timerId !== undefined) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.today}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Timer } from './components/Timer';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string;\n  hide: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hide: true,\n  };\n\n  private timerId: number | undefined = undefined;\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    window.addEventListener('contextmenu', this.handleContextMenu);\n    window.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('contextmenu', this.handleContextMenu);\n    window.removeEventListener('click', this.handleClick);\n\n    if (this.timerId !== undefined) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hide: false,\n    });\n  };\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hide: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hide && <Timer name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}